name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  # Group concurrency on workflow, then:
  # - Is merge run? Group on branch name (`refs/heads/main`)
  # - Is pull request? Group on pull request branch name, for example `feat/add-awesome-feature`
  group: >-
    ${{ github.workflow }}-${{
      github.event_name == 'push'
        && github.ref
        || github.head_ref
    }}
  # Run merge workflows in sequence to prevent parallel deployments and releases
  # Cancel stale pull request runs in progress for the same branch
  cancel-in-progress: ${{ github.event_name != 'push' }}

permissions:
  actions: write
  contents: write
  packages: write
  pages: write

env:
  HUSKY: 0

jobs:
  main:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout [Pull Request]
        uses: actions/checkout@v2
        if: ${{ github.event_name == 'pull_request' }}
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Checkout [Default Branch]
        uses: actions/checkout@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: ${{ github.base_ref }}

      - name: Detect changed directories
        uses: gagle/nx-check-changes@v1.0.0
        id: nx-changes

      - name: Set up dependencies
        uses: ./.github/actions/setup-dependencies

      - name: Lint affected projects
        run: npx nx affected --target=lint --parallel=3

      - name: Test affected projects
        run: npx nx affected --target=test --parallel=3 --ci --code-coverage

      - name: Build affected projects
        run: npx nx affected --target=build --prod --parallel=3

      - name: Release
        if: ${{ success() && github.ref == 'refs/heads/main' && (github.event_name != 'pull_request' || github.event.action == 'closed' && github.event.pull_request.merged == true) }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx nx affected --target release --parallel=1

      - name: Deploy demo to GitHub Pages
        if: success() && github.ref == 'refs/heads/main' && contains(steps.nx-changes.outputs.changed-dirs, 'demo')
        uses: crazy-max/ghaction-github-pages@v3
        with:
          target_branch: gh-pages
          build_dir: ./dist/apps/demo
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
